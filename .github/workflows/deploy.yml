name: Demo

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        git config --global url."git@github.com:".insteadOf "https://github.com/"

    - name: Install dependencies, configure SLURM with correct hostname, and run training
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          set -e

          # Update and install required packages
          sudo apt update &&
          sudo apt install -y git python3 python3-pip python3-venv build-essential slurm-wlm munge &&

          # Get the real hostname and make sure it's resolvable
          HOSTNAME=\$(hostname)
          echo \"Detected hostname: \$HOSTNAME\"
          grep -q \"127.0.0.1 \$HOSTNAME\" /etc/hosts || echo \"127.0.0.1 \$HOSTNAME\" | sudo tee -a /etc/hosts

          # Ensure slurm user exists
          id slurm || sudo useradd -m slurm

          # Create minimal slurm.conf using detected hostname
          sudo mkdir -p /etc/slurm-llnl
          sudo bash -c \"echo 'ControlMachine=\$HOSTNAME' > /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmUser=slurm' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmctldPort=6817' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmdPort=6818' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'AuthType=auth/munge' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'StateSaveLocation=/var/spool/slurm/state' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmdSpoolDir=/var/spool/slurmd' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SwitchType=switch/none' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'MpiDefault=none' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmctldTimeout=300' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SlurmdTimeout=300' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SchedulerType=sched/backfill' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SelectType=select/cons_res' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'SelectTypeParameters=CR_Core' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'NodeName=\$HOSTNAME CPUs=2 State=UNKNOWN' >> /etc/slurm-llnl/slurm.conf\"
          sudo bash -c \"echo 'PartitionName=debug Nodes=ALL Default=YES MaxTime=INFINITE State=UP' >> /etc/slurm-llnl/slurm.conf\"

          # Restart MUNGE and SLURM
          sudo systemctl restart munge slurmctld slurmd

          # Clone the project if not exists
          cd ${{ secrets.SSH_PATH }}
          [ -d Demo-ML-TF-Slurm ] || git clone git@github.com:okcan/Demo-ML-TF-Slurm.git
          cd Demo-ML-TF-Slurm

          # Set up virtual environment
          [ -d venv ] || python3 -m venv venv
          source venv/bin/activate

          pip install --upgrade pip
          pip install torch pandas scikit-learn matplotlib

          # Run training with SLURM
          sbatch train_job.slurm
        "
